---
- hosts: all
  remote_user: root
  vars_files:
    - vars.yml

  tasks:
    - name: Wait for newly created system to become reachable
      ansible.builtin.wait_for_connection:
        timeout: 600
    - name: Add an Apt signing key for Caddy
      ansible.builtin.apt_key:
        url: https://dl.cloudsmith.io/public/caddy/stable/gpg.key
        state: present

    - name: Add deb repository into sources list for Caddy
      ansible.builtin.apt_repository:
        repo: deb https://dl.cloudsmith.io/public/caddy/stable/deb/debian any-version main
        state: present
        filename: caddy-stable

    - name: Add deb-src repository into sources list for Caddy
      ansible.builtin.apt_repository:
        repo: deb-src https://dl.cloudsmith.io/public/caddy/stable/deb/debian any-version main
        state: present
        filename: caddy-stable

    - name: Update all packages to their latest version
      apt:
        name: "*"
        state: latest

    - name: Install packages
      apt:
        name:
          - "git"
          - "fail2ban"
          - "bash"
          - "curl"
          - "htop"
          - "rlwrap"
          - "openjdk-17-jdk"
          - "debian-keyring"
          - "debian-archive-keyring"
          - "apt-transport-https"
          - "caddy"
          - "nodejs"
          - "npm"
          - "leiningen"
          - "tmux"
          - "acl"
          - "awscli"
          - "pipenv"
        update-cache: yes

    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: visudo -cf %s

    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ user_acc }}"
        state: present
        groups:
          - "sudo"
          - "wheel"
        append: true
        create_home: true
        shell: /bin/bash

    # TODO: copy authorized_keys from ubuntu user to kosa-user

    - name: Set authorized keys taken from url
      ansible.posix.authorized_key:
        user: "{{ user_acc }}"
        state: present
        key: "{{ item }}"
      loop:
        - https://github.com/oxalorg.keys
        - https://github.com/deobald.keys
      tags:
        - keys

    - name: Make Root Directory exist
      file:
        path: "{{ srv_dir }}"
        mode: u=rwx,g=rx,o=rx
        recurse: yes
        owner: "{{ user_acc }}"
        group: www-data
        state: directory

    - name: Create Log Directory
      file:
        path: "{{ log_dir }}"
        mode: u=rwx,g=rx,o=rx
        recurse: yes
        owner: "{{ user_acc }}"
        group: www-data
        state: directory
